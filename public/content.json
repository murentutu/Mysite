{"pages":[{"title":"Tags","date":"2023-03-29T00:35:53.814Z","path":"tags/index.html","text":""},{"title":"About","date":"2023-03-29T00:35:53.796Z","path":"about/index.html","text":""},{"title":"Categories","date":"2023-04-02T07:08:44.770Z","path":"categories/index.html","text":""}],"posts":[{"title":"Windows下安装CUDA和Pytorch","date":"2023-04-03T12:19:31.000Z","path":"wiki/Windows下安装CUDA和Pytorch/","text":"确认有NVIDIA GPU以及CUDA版本 ​ 方法一：打开任务管理器，在“性能”选项下查看是否有GPU的显示。 ​ 方法二：通过“设备管理器-显示适配器”查看电脑是否有独立显卡，需要是英伟达的！ ​ 直接在桌面上右键打开“NVIDIA控制面板”，点击左下角“系统信息”，再点击“组件”查看CUDA支持版本。 image-20230403214607942 安装CUDA ​ 官网下载地址：https://developer.nvidia.com/cuda-toolkit-archive ​ 考虑到C盘内存空间不是很够，所以全部安装在D盘了。 image-20230403223703306 ​ 检查CUDA是否安装成功，在cmd输入nvcc -V查看，如下图所示： image-20230403233823954 安装cuDNN ​ 安装地址:https://developer.nvidia.com/rdp/cudnn-archive ​ 选择版本：11.0 ​ 下载并解压后将文件夹内的内容移动到CUDA的数据目录下：D:CorporationSamples1.0 安装Anaconda ​ 安装包路径：https://www.anaconda.com/products/distribution ​ 下载完安装包以后，右键以管理员身份运行进行安装，安装时注意安装路径，其他则默认选项下一步即可。 ​ 安装完以后发现开始菜单找不到anaconda的入口，进入anaconda安装目录，进入scripts文件夹，右键进入命令行模式，输入命令*conda install -c anaconda anaconda-navigator*。安装anaconda-navigator即可。 安装pytorch 打开anaconda prompt，输入命令conda create -n pytorch python=3.6这一步是创建了pytorch虚拟房间。 123conda create -n pytorch python=3.6 # 创建pytorch虚拟房间conda info --envs # 查看已经创建的房间 安装pytorch，使用如下命令激活pytorch房间。 1conda activate pytorch 在pytorch官网获取安装命令，找到CUDA 11.0对应的conda命令 官网地址：https://pytorch.org/get-started/previous-versions/ 12# CUDA 11.0conda install pytorch==1.7.1 torchvision==0.8.2 torchaudio==0.7.2 cudatoolkit=11.0 -c pytorch 安装d2I和Jupyter 下载d2I记事本运行测试 测试Pytorch ​ 在pytorch房间进入python image-20230404104315103 123&gt;&gt;&gt; import torch&gt;&gt;&gt; print(torch.cuda.is_available())True ​ 返回True表示GPU成功被调用。 参考资料 Windows 下安装 CUDA 和 Pytorch 跑深度学习 - 动手学深度学习v2 GPU版Pytorch1.6安装教程--基于Win10+MX250+CUDA10.2+cuDNN7.6.5","tags":[{"name":"Pytorch","slug":"Pytorch","permalink":"http://example.com/tags/Pytorch/"},{"name":"Anaconda","slug":"Anaconda","permalink":"http://example.com/tags/Anaconda/"}],"categories":[{"name":"毕设","slug":"毕设","permalink":"http://example.com/categories/%E6%AF%95%E8%AE%BE/"}]},{"title":"博客的更新和网站源码的更新","date":"2023-04-02T07:08:21.000Z","path":"wiki/博客的更新和网站源码的更新/","text":"一、博客的更新（murentutu/murentutu.github.io） 打开存放博客源码的本地文件夹，右键进入git bash命令行模式。 常用的hexo命令如下： 1234567891011$ hexo init # 新建一个网站，也就是在当前文件夹下进行一个初始化$ hexo clean # 用于清理缓存文件（常用）$ hexo new [title] # 新建一篇文章$ hexo generate # 用于生成静态文件，一般简写为hexo g$ hexo server # 用于启动本地服务器，常用于正式部署前的预览，一般简写为hexo s$ hexo deploy # 用于部署网站，一般简写为hexo d 如果网站不能正常显示时，可以尝试以下命令（暂时还没有遇到过异常，做个备用放在这） 12345$ hexo --safe # 安全模式，禁止加载插件和脚本$ hexo --debug # 调试模式，用于将消息详细记录到终端和debug.log文件中$ hexo --silent # 静默模式，用于静默输出到终端 二、网站源码的更新（murentutu/Mysite） 这里进行网站源码的更新其实是用于备份，担心以后换电脑或者其他不可控元素导致本地文件丢失，避免造成太多麻烦。 打开存放博客源码的本地文件夹，同样是右键进入git bash命令行模式。 这里首先将创建初始时将本地文件推送到远程仓库的步骤展示如下，总共有两种情况： 第一种情况：本地没有git仓库，需要将远程仓库（即github中的项目地址）下载到本地，使用命令如下： 123456$ git init # 初始化git仓库$ git add README.md # 在仓库填写README.md文件$ git commit -m &quot;first commit&quot; # 将当前暂存区中的文件实际保存到仓库的历史记录中，记录对本地存储库的更改。$ git remote add origin https://github.com/murentutu/murentutu.github.io.git # 添加远程仓库 $ git branch -M main # 将分支改为main而不是master$ git push -u origin main # image-20230402152920420 第二种情况， 如果此时有文件需要更新到远程仓库，需要先将项目文件添加到本地仓库暂存区，再将本地仓库推送到远程仓库来实现更新。相关命令如下所示： 123456789101112131415161718192021$ git add . # 添加当前目录的所有文件到暂存区$ git add [file1][file2] # 添加指定文件到暂存区$ git add [dir] # 添加指定文件夹到暂存区$ git status # 显示Git仓库状态，常用于查看仓库中是否有可提交的内容$ git commit -m &quot;message&quot; # 将当前暂存区中的文件实际保存到仓库的历史记录中，记录对本地存储库的更改。$ $ git push -u $ git push $ echo &quot;# test&quot; &gt;&gt; README.md$ git init$ git add README.md$ git commit -m &quot;first commit&quot;$ git branch -M main$ git remote add origin https://github.com/murentutu/murentutu.github$ git push -u origin main 参考资料 Hexo系列(三) 常用命令详解","tags":[{"name":"git","slug":"git","permalink":"http://example.com/tags/git/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}],"categories":[{"name":"博客部署","slug":"博客部署","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"}]},{"title":"hexo中插入音乐和视频","date":"2023-03-30T09:49:30.000Z","path":"wiki/博客部署——hexo中插入音乐和视频/","text":"一、前期准备 ​ 如果插入的音乐和视频是在本地存储的，则需要多进行一步。需要先把本地的音乐和视频上传到图床这一类工具上面，获取到可直接访问的网络链接。这里自己采用的是已购买的腾讯云上面的对象存储服务。这里有两种方法，一种是通过typora+PicGO+腾讯云实现自动生成链接；另一种就是直接进入腾讯云上传。 二、下载hexo插件 可以直接使用npm安装 hexo-tag-aplayer:https://github.com/MoePlayer/hexo-tag-aplayer 1npm install hexo-tag-aplayer hexo-tag-dplayer:https://github.com/NextMoe/hexo-tag-dplayer 1npm install hexo-tag-dplayer 三、通过aplayer在博客中插入音乐 在markdown中添加如下代码： 1&#123;% aplayer &quot;她的睫毛&quot; &quot;周杰伦&quot; &quot;http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3&quot; &quot;http://home.ustc.edu.cn/~mmmwhy/jay.jpg&quot; %&#125; 效果如下所示： var ap = new APlayer({ element: document.getElementById(\"aplayer-mlnZvbjQ\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"她的睫毛\", author: \"周杰伦\", url: \"http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3\", pic: \"http://home.ustc.edu.cn/~mmmwhy/jay.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 四、通过dplayer在博客中插入视频 在markdown中添加如下代码： 1&#123;% dplayer &quot;url=http://home.ustc.edu.cn/~mmmwhy/GEM.mp4&quot; &quot;pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125; 效果如下所示： (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://mu-1311836296.cos.ap-nanjing.myqcloud.com/murentutu/cloudimages/188%E7%9A%84love%20story.mp4\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 参考资料 Hexo博客中插入音乐/视频/","tags":[{"name":"hexo插件","slug":"hexo插件","permalink":"http://example.com/tags/hexo%E6%8F%92%E4%BB%B6/"}],"categories":[{"name":"博客部署","slug":"博客部署","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"}]},{"title":"秘密基地","date":"2023-03-30T09:33:46.000Z","path":"wiki/秘密基地/","text":"一、守护住自己的小美好 美好的东西总是稍纵即逝的，好在我有幸在失去它的时候将它找回来。乐于和别人分享但是更害怕会再一次失去它，所以这一次我就把这个美好存在这里了。命名为秘密基地，是独有的宁静的属于自己的。 (function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer1\"),\"theme\":\"#FADFA3\",\"loop\":true,\"video\":{\"url\":\"https://mu-1311836296.cos.ap-nanjing.myqcloud.com/murentutu/cloudimages/188%E7%9A%84love%20story.mp4\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()","tags":[],"categories":[{"name":"自留地","slug":"自留地","permalink":"http://example.com/categories/%E8%87%AA%E7%95%99%E5%9C%B0/"}]},{"title":"hello","date":"2023-03-29T01:17:41.000Z","path":"wiki/hello/","text":"这是一个测试。。。。。。。。。 参考资料","tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}],"categories":[{"name":"博客部署","slug":"博客部署","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"}]},{"title":"Hello World","date":"2023-03-28T14:45:27.397Z","path":"wiki/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","tags":[],"categories":[]}],"categories":[{"name":"毕设","slug":"毕设","permalink":"http://example.com/categories/%E6%AF%95%E8%AE%BE/"},{"name":"博客部署","slug":"博客部署","permalink":"http://example.com/categories/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"},{"name":"自留地","slug":"自留地","permalink":"http://example.com/categories/%E8%87%AA%E7%95%99%E5%9C%B0/"}],"tags":[{"name":"Pytorch","slug":"Pytorch","permalink":"http://example.com/tags/Pytorch/"},{"name":"Anaconda","slug":"Anaconda","permalink":"http://example.com/tags/Anaconda/"},{"name":"git","slug":"git","permalink":"http://example.com/tags/git/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"hexo插件","slug":"hexo插件","permalink":"http://example.com/tags/hexo%E6%8F%92%E4%BB%B6/"},{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]}